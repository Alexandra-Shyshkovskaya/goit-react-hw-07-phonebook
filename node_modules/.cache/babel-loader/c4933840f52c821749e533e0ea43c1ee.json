{"ast":null,"code":"var _jsxFileName = \"/Users/janakozachka/Documents/GitHub/goit-react-hw-07-phonebook/src/App.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Container from \"./Components/Container\";\nimport ContactForm from \"./Components/ContactsForm\";\nimport Filter from \"./Components/SearchFilter\";\nimport ContactList from \"./Components/ContactsList\";\nimport contactOperations from './redux/contact/contact-operations';\nimport { getLoading } from './redux/contact/contact-selectors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Phonebook\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ContactForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Contacts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ContactList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isLoadingContacts: getLoading(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactOperations.fetchContact())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/janakozachka/Documents/GitHub/goit-react-hw-07-phonebook/src/App.js"],"names":["React","connect","Container","ContactForm","Filter","ContactList","contactOperations","getLoading","App","Component","componentDidMount","props","fetchContacts","render","mapStateToProps","state","isLoadingContacts","mapDispatchToProps","dispatch","fetchContact"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,iBAAP,MAA8B,oCAA9B;AACA,SAASC,UAAT,QAA2B,mCAA3B;;;;AAEA,MAAMC,GAAN,SAAkBC,SAAlB,CAA4B;AAC1BC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,aAAX;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE,QAAC,SAAD;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAWD;;AAhByB;;AAmB5B,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCC,EAAAA,iBAAiB,EAAET,UAAU,CAACQ,KAAD;AADG,CAAL,CAA7B;;AAGA,MAAME,kBAAkB,GAAGC,QAAQ,KAAK;AACtCN,EAAAA,aAAa,EAAE,MAAMM,QAAQ,CAACZ,iBAAiB,CAACa,YAAlB,EAAD;AADS,CAAL,CAAnC;;AAIA,eAAelB,OAAO,CAACa,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CT,GAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Container from \"./Components/Container\";\nimport ContactForm from \"./Components/ContactsForm\";\nimport Filter from \"./Components/SearchFilter\";\nimport ContactList from \"./Components/ContactsList\";\nimport contactOperations from './redux/contact/contact-operations';\nimport { getLoading } from './redux/contact/contact-selectors';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n  render() {\n    return (\n      <>\n        <Container>\n          <h1>Phonebook</h1>\n          <ContactForm />\n          <h2>Contacts</h2>\n          <Filter />\n          <ContactList />\n        </Container>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isLoadingContacts: getLoading(state),\n});\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactOperations.fetchContact()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}